[{"C:\\React\\Accounting\\frontend\\src\\App.js":"1","C:\\React\\Accounting\\frontend\\src\\shared\\form\\Input.js":"2","C:\\React\\Accounting\\frontend\\src\\invoices\\SingleInvoice.js":"3","C:\\React\\Accounting\\frontend\\src\\shared\\UIElements\\PickDateModal.js":"4","C:\\React\\Accounting\\frontend\\src\\index.js":"5","C:\\React\\Accounting\\frontend\\src\\screens\\PrintScreen.js":"6","C:\\React\\Accounting\\frontend\\src\\screens\\HomeScreen.js":"7","C:\\React\\Accounting\\frontend\\src\\reducers\\invoiceReducers.js":"8","C:\\React\\Accounting\\frontend\\src\\constants\\invoiceConstants.js":"9","C:\\React\\Accounting\\frontend\\src\\actions\\invoiceActions.js":"10","C:\\React\\Accounting\\frontend\\src\\shared\\UIElements\\EditModal.js":"11","C:\\React\\Accounting\\frontend\\src\\invoices\\AvrPrint.js":"12","C:\\React\\Accounting\\frontend\\src\\actions\\clientActions.js":"13","C:\\React\\Accounting\\frontend\\src\\invoices\\NewInvoice.js":"14","C:\\React\\Accounting\\frontend\\src\\components\\Header.js":"15","C:\\React\\Accounting\\frontend\\src\\shared\\form\\Form.js":"16","C:\\React\\Accounting\\frontend\\src\\invoices\\InvoicePrint.js":"17","C:\\React\\Accounting\\frontend\\src\\invoices\\InvoiceItem.js":"18"},{"size":1676,"mtime":1610918186837,"results":"19","hashOfConfig":"20"},{"size":394,"mtime":1610522957137,"results":"21","hashOfConfig":"20"},{"size":5576,"mtime":1610980051108,"results":"22","hashOfConfig":"20"},{"size":1508,"mtime":1610980250528,"results":"23","hashOfConfig":"20"},{"size":587,"mtime":1610054565594,"results":"24","hashOfConfig":"20"},{"size":2305,"mtime":1610991913444,"results":"25","hashOfConfig":"20"},{"size":3064,"mtime":1610992285276,"results":"26","hashOfConfig":"20"},{"size":3421,"mtime":1610988488869,"results":"27","hashOfConfig":"20"},{"size":1342,"mtime":1610979304249,"results":"28","hashOfConfig":"20"},{"size":5220,"mtime":1610988613575,"results":"29","hashOfConfig":"20"},{"size":720,"mtime":1609315099352,"results":"30","hashOfConfig":"20"},{"size":3827,"mtime":1610988852577,"results":"31","hashOfConfig":"20"},{"size":2065,"mtime":1610982466406,"results":"32","hashOfConfig":"20"},{"size":10604,"mtime":1610988357275,"results":"33","hashOfConfig":"20"},{"size":1267,"mtime":1610982781597,"results":"34","hashOfConfig":"20"},{"size":2340,"mtime":1610841852550,"results":"35","hashOfConfig":"20"},{"size":3185,"mtime":1610990099932,"results":"36","hashOfConfig":"20"},{"size":701,"mtime":1610992263015,"results":"37","hashOfConfig":"20"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1tn6h3s",{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\React\\Accounting\\frontend\\src\\App.js",["79","80"],"C:\\React\\Accounting\\frontend\\src\\shared\\form\\Input.js",[],"C:\\React\\Accounting\\frontend\\src\\invoices\\SingleInvoice.js",["81"],"C:\\React\\Accounting\\frontend\\src\\shared\\UIElements\\PickDateModal.js",["82","83","84","85"],"import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { setAvrDate, setAvrDateModalOff} from '../../actions/invoiceActions'\r\n\r\nimport { Form, FormControl, Modal } from 'react-bootstrap'\r\nimport { Button } from 'react-bootstrap'\r\n\r\nconst PickDateModal = ({ showModal, closeModal, title, body }) => {\r\n  const history = useHistory()\r\n  const dispatch = useDispatch()\r\n  // const [avrDate, setAvrDate] = useState(new Date())\r\n\r\n  const changeHandler = (e) => {\r\n    const date = new Date(e.target.value).toLocaleDateString('ru', {\r\n      year: 'numeric',\r\n      month: 'long',\r\n      day: 'numeric',\r\n    })\r\n    dispatch(setAvrDate(date))\r\n    dispatch(setAvrDateModalOff())\r\n    history.push('/invoices/AvrPrint')\r\n  }\r\n\r\n  // console.log(avrDate)\r\n  return (\r\n    <>\r\n      <Modal\r\n        show={showModal}\r\n        onHide={closeModal}\r\n        backdrop='static'\r\n        keyboard={false}\r\n        size='sm'\r\n      >\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>{title}</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Form>\r\n            <Form.Group>\r\n              <Form.Control\r\n                type='date'\r\n                name='avrDate'\r\n                // value={avrDate}\r\n                onChange={changeHandler}\r\n              />\r\n            </Form.Group>\r\n          </Form>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PickDateModal\r\n",["86","87"],"C:\\React\\Accounting\\frontend\\src\\index.js",[],["88","89"],"C:\\React\\Accounting\\frontend\\src\\screens\\PrintScreen.js",["90","91","92","93"],"import React, { useRef } from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Button, Row } from 'react-bootstrap'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport InvoicePrint from '../invoices/InvoicePrint'\r\nimport AvrPrint from '../invoices/AvrPrint'\r\nimport { useReactToPrint } from 'react-to-print'\r\nimport { rubles } from 'rubles'\r\n\r\nconst PrintScreen = ({ data }) => {\r\n  const history = useHistory()\r\n  const componentRef = useRef()\r\n  const handlePrint = useReactToPrint({\r\n    content: () => componentRef.current,\r\n  })\r\n\r\n  const dispatch = useDispatch()\r\n  const invoiceDetails = useSelector((state) => state.invoiceDetails)\r\n  const { loading, error, invoice, current } = invoiceDetails\r\n  const invoiceCreate = useSelector((state) => state.invoiceCreate)\r\n  const { avrDate } = invoiceCreate\r\n  const clientList = useSelector((state) => state.clientList)\r\n  const { clients } = clientList\r\n\r\n  console.log('CLIENTS', clients);\r\n  if (clients.length === 0) {\r\n    history.push('/')\r\n    return <>.</>\r\n  } \r\n\r\n  const address = clients.find((client) => client.name === current.client)\r\n    .address\r\n\r\n\r\n  const text = rubles(current.total)\r\n\r\n  let date = new Date(current.createdAt).toLocaleString('ru', {\r\n    year: 'numeric',\r\n    month: 'long',\r\n    day: 'numeric',\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {data === 'InvoicePrint' ? (\r\n        <InvoicePrint current={current} date={date} ref={componentRef} />\r\n      ) : (\r\n        <AvrPrint\r\n          current={current}\r\n          date={avrDate}\r\n          address={address}\r\n          text={text}\r\n          ref={componentRef}\r\n        />\r\n      )}\r\n      <Row>\r\n        <Button\r\n          onClick={handlePrint}\r\n          variant='outline-dark'\r\n          size='lg'\r\n          block\r\n          style={{ width: '30%', margin: '2rem auto' }}\r\n        >\r\n          <i className='fas fa-print'></i> Печать\r\n        </Button>\r\n        <Button\r\n          onClick={() => {\r\n            history.goBack()\r\n          }}\r\n          variant='outline-primary'\r\n          size='lg'\r\n          block\r\n          style={{ width: '30%', margin: '2rem auto' }}\r\n        >\r\n          <i className='fas fa-arrow-circle-left'></i> Назад\r\n        </Button>\r\n      </Row>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PrintScreen\r\n","C:\\React\\Accounting\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\React\\Accounting\\frontend\\src\\reducers\\invoiceReducers.js",[],"C:\\React\\Accounting\\frontend\\src\\constants\\invoiceConstants.js",[],"C:\\React\\Accounting\\frontend\\src\\actions\\invoiceActions.js",["94","95","96"],"C:\\React\\Accounting\\frontend\\src\\shared\\UIElements\\EditModal.js",[],"C:\\React\\Accounting\\frontend\\src\\invoices\\AvrPrint.js",["97"],"C:\\React\\Accounting\\frontend\\src\\actions\\clientActions.js",[],"C:\\React\\Accounting\\frontend\\src\\invoices\\NewInvoice.js",["98","99","100","101"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { useHistory } from 'react-router-dom'\r\nimport * as yup from 'yup'\r\nimport { Formik, ErrorMessage, FieldArray, Field } from 'formik'\r\nimport { Form, Col, Button } from 'react-bootstrap'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport SuccessModal from '../shared/UIElements/SuccessModal'\r\nimport TextError from '../shared/form/TextError'\r\nimport EditModal from '../shared/UIElements/EditModal'\r\nimport { FormNewClient } from '../shared/form/Form'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\nimport {\r\n  createClient,\r\n  newClientModalHide,\r\n  newClientModalShow,\r\n} from '../actions/clientActions'\r\nimport { createInvoice } from '../actions/invoiceActions'\r\n\r\nconst reqdFieldMsg = 'Обязательное поле'\r\n\r\nconst schema = yup.object({\r\n  client: yup.string().required(reqdFieldMsg),\r\n  vessel: yup.string().required(reqdFieldMsg),\r\n  voyage: yup.string().required(reqdFieldMsg),\r\n  bl: yup.string().required(reqdFieldMsg),\r\n  container: yup.string().required(reqdFieldMsg),\r\n})\r\n\r\nconst NewInvoice = () => {\r\n  const [validData, setValidData] = useState({})\r\n  const [showModal, setShowModal] = useState(false)\r\n\r\n  const history = useHistory()\r\n\r\n  const dispatch = useDispatch()\r\n  const clientList = useSelector((state) => state.clientList)\r\n  const { clients } = clientList\r\n\r\n  const clientCreate = useSelector((state) => state.clientCreate)\r\n  const { isNewClientModalShow, err } = clientCreate\r\n\r\n  const invoiceList = useSelector((state) => state.invoiceList)\r\n  const { nextInvoiceNumber } = invoiceList\r\n\r\n  const invoiceCreate = useSelector((state) => state.invoiceCreate)\r\n  const { invoice } = invoiceCreate\r\n\r\n  const invoiceDetails = useSelector((state) => state.invoiceDetails)\r\n  const { current } = invoiceDetails\r\n\r\n  const onSubmit = (values) => {\r\n    values.lines.map((line) => (line.subTotal = line.quantity * line.cost))\r\n\r\n    const t = values.lines.map((line) => line.subTotal)\r\n    const linesNumber = values.lines.length\r\n    const total = t.reduce((a, b) => a + b)\r\n\r\n    values = { ...values, total, linesNumber, number: nextInvoiceNumber }\r\n\r\n    console.log(values)\r\n    setValidData(values)\r\n    dispatch(createInvoice(values))\r\n    console.log(invoice);\r\n    history.push('/') //////////////////////////////////////////////\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        validateOnChange={false}\r\n        initialValues={{\r\n          client: '',\r\n          vessel: '',\r\n          voyage: '',\r\n          bl: '',\r\n          container: '',\r\n          lines: [\r\n            {\r\n              jobDescription: '',\r\n              quantity: '',\r\n              cost: '',\r\n            },\r\n          ],\r\n          linesNumber: [''],\r\n        }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          getFieldProps,\r\n          values,\r\n          touched,\r\n          errors,\r\n        }) => {\r\n          return (\r\n            <>\r\n              {err && <Message variant='danger'>{err}</Message>}\r\n              <EditModal\r\n                showModal={isNewClientModalShow}\r\n                closeModal={() => dispatch(newClientModalHide())}\r\n                title='Введите название компании'\r\n                body={<FormNewClient />}\r\n              />\r\n              <Form noValidate onSubmit={handleSubmit}>\r\n                <Form.Row className='mb-2'>\r\n                  <Form.Group as={Col} md='8'>\r\n                    <Form.Label>Клиент - выбор из списка</Form.Label>\r\n                    <Form.Control\r\n                      as='select'\r\n                      type='text'\r\n                      name='client'\r\n                      {...getFieldProps('client')}\r\n                      isInvalid={errors.client && touched.client}\r\n                    >\r\n                      <option></option>\r\n                      {clients.map((client) => (\r\n                        <option key={client.name}>{client.name}</option>\r\n                      ))}\r\n                    </Form.Control>\r\n                    <ErrorMessage name='client' component={TextError} />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Button\r\n                      className='btn-secondary'\r\n                      style={{ marginTop: '31px' }}\r\n                      onClick={() => dispatch(newClientModalShow())}\r\n                    >\r\n                      или - Новый клиент\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row className='mb-2'>\r\n                  <Form.Group as={Col} md='8'>\r\n                    <Form.Label>Судно</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      name='vessel'\r\n                      // placeholder='Название судна'\r\n                      {...getFieldProps('vessel')}\r\n                      isInvalid={errors.vessel && touched.vessel}\r\n                    />\r\n                    <ErrorMessage name='vessel' component={TextError} />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md='4'>\r\n                    <Form.Label>Номер рейса</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      name='voyage'\r\n                      // placeholder='Номер рейса'\r\n                      {...getFieldProps('voyage')}\r\n                      isInvalid={errors.voyage && touched.voyage}\r\n                    />\r\n                    <ErrorMessage name='voyage' component={TextError} />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                  <Form.Group as={Col} md='4'>\r\n                    <Form.Label>Коносамент</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      name='bl'\r\n                      // placeholder='Номер коносамента'\r\n                      {...getFieldProps('bl')}\r\n                      isInvalid={errors.bl && touched.bl}\r\n                    />\r\n                    <ErrorMessage name='bl' component={TextError} />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md='8'>\r\n                    <Form.Label>Номера контейнеров</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      name='container'\r\n                      // placeholder='Номера контейнеров'\r\n                      {...getFieldProps('container')}\r\n                      isInvalid={errors.container && touched.container}\r\n                    />\r\n                    <ErrorMessage name='container' component={TextError} />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <h5 className='text-center mt-5'>Позиции Счета</h5>\r\n\r\n                <FieldArray\r\n                  name='lines'\r\n                  render={(arrayHelpers) => (\r\n                    <>\r\n                      {values.lines.map((line, index) => (\r\n                        <Form.Row key={index}>\r\n                          {/** both these conventions do the same */}\r\n                          <Form.Group as={Col} xs={9}>\r\n                            <Field\r\n                              as={Form.Control}\r\n                              name={`lines[${index}].jobDescription`}\r\n                              placeholder='Описание услуги'\r\n                            />\r\n                          </Form.Group>\r\n                          <Form.Group as={Col}>\r\n                            <Field\r\n                              as={Form.Control}\r\n                              name={`lines.${index}.quantity`}\r\n                              placeholder='Количество'\r\n                            />\r\n                          </Form.Group>\r\n                          <Form.Group as={Col}>\r\n                            <Field\r\n                              as={Form.Control}\r\n                              name={`lines.${index}.cost`}\r\n                              placeholder='Цена'\r\n                            />\r\n                          </Form.Group>\r\n                          <Form.Group>\r\n                            <Button\r\n                              variant='outline-primary'\r\n                              type='button'\r\n                              onClick={() => {\r\n                                arrayHelpers.remove(index)\r\n                              }}\r\n                              data-tip\r\n                              data-for='minusTip'\r\n                            >\r\n                              <i className='fas fa-minus-circle'></i>\r\n                            </Button>\r\n                            <ReactTooltip\r\n                              id='minusTip'\r\n                              place='top'\r\n                              effect='solid'\r\n                            >\r\n                              Удалить строку\r\n                            </ReactTooltip>\r\n                          </Form.Group>\r\n                        </Form.Row>\r\n                      ))}\r\n                      <Form.Group>\r\n                        <Button\r\n                          variant='outline-success'\r\n                          // className='btn btn-success'\r\n                          type='button'\r\n                          onClick={() => {\r\n                            arrayHelpers.push('')\r\n                          }}\r\n                          data-tip\r\n                          data-for='plusTip'\r\n                        >\r\n                          <i className='fas fa-plus-circle'></i>\r\n                        </Button>\r\n                        <ReactTooltip id='plusTip' place='right' effect='solid'>\r\n                          Добавить строку\r\n                        </ReactTooltip>\r\n                      </Form.Group>\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Button type='submit'>Отправить</Button>\r\n              </Form>\r\n            </>\r\n          )\r\n        }}\r\n      </Formik>\r\n      <SuccessModal\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        data={validData}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewInvoice\r\n","C:\\React\\Accounting\\frontend\\src\\components\\Header.js",["102"],"C:\\React\\Accounting\\frontend\\src\\shared\\form\\Form.js",["103","104","105","106","107","108","109","110"],"C:\\React\\Accounting\\frontend\\src\\invoices\\InvoicePrint.js",[],"C:\\React\\Accounting\\frontend\\src\\invoices\\InvoiceItem.js",[],{"ruleId":"111","severity":1,"message":"112","line":11,"column":3,"nodeType":"113","messageId":"114","endLine":11,"endColumn":11},{"ruleId":"111","severity":1,"message":"115","line":16,"column":8,"nodeType":"113","messageId":"114","endLine":16,"endColumn":20},{"ruleId":"111","severity":1,"message":"116","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"116","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"117","line":2,"column":23,"nodeType":"113","messageId":"114","endLine":2,"endColumn":34},{"ruleId":"111","severity":1,"message":"118","line":6,"column":16,"nodeType":"113","messageId":"114","endLine":6,"endColumn":27},{"ruleId":"111","severity":1,"message":"119","line":7,"column":10,"nodeType":"113","messageId":"114","endLine":7,"endColumn":16},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"120","replacedBy":"124"},{"ruleId":"122","replacedBy":"125"},{"ruleId":"111","severity":1,"message":"126","line":17,"column":9,"nodeType":"113","messageId":"114","endLine":17,"endColumn":17},{"ruleId":"111","severity":1,"message":"127","line":19,"column":11,"nodeType":"113","messageId":"114","endLine":19,"endColumn":18},{"ruleId":"111","severity":1,"message":"128","line":19,"column":20,"nodeType":"113","messageId":"114","endLine":19,"endColumn":25},{"ruleId":"111","severity":1,"message":"129","line":19,"column":27,"nodeType":"113","messageId":"114","endLine":19,"endColumn":34},{"ruleId":"111","severity":1,"message":"130","line":13,"column":3,"nodeType":"113","messageId":"114","endLine":13,"endColumn":21},{"ruleId":"111","severity":1,"message":"131","line":21,"column":3,"nodeType":"113","messageId":"114","endLine":21,"endColumn":22},{"ruleId":"111","severity":1,"message":"132","line":185,"column":11,"nodeType":"113","messageId":"114","endLine":185,"endColumn":18},{"ruleId":"111","severity":1,"message":"133","line":3,"column":8,"nodeType":"113","messageId":"114","endLine":3,"endColumn":27},{"ruleId":"111","severity":1,"message":"134","line":1,"column":27,"nodeType":"113","messageId":"114","endLine":1,"endColumn":36},{"ruleId":"111","severity":1,"message":"135","line":13,"column":8,"nodeType":"113","messageId":"114","endLine":13,"endColumn":14},{"ruleId":"111","severity":1,"message":"136","line":16,"column":3,"nodeType":"113","messageId":"114","endLine":16,"endColumn":15},{"ruleId":"111","severity":1,"message":"137","line":52,"column":11,"nodeType":"113","messageId":"114","endLine":52,"endColumn":18},{"ruleId":"111","severity":1,"message":"138","line":4,"column":10,"nodeType":"113","messageId":"114","endLine":4,"endColumn":17},{"ruleId":"111","severity":1,"message":"116","line":1,"column":17,"nodeType":"113","messageId":"114","endLine":1,"endColumn":25},{"ruleId":"111","severity":1,"message":"117","line":2,"column":23,"nodeType":"113","messageId":"114","endLine":2,"endColumn":34},{"ruleId":"111","severity":1,"message":"139","line":3,"column":13,"nodeType":"113","messageId":"114","endLine":3,"endColumn":16},{"ruleId":"111","severity":1,"message":"140","line":5,"column":16,"nodeType":"113","messageId":"114","endLine":5,"endColumn":19},{"ruleId":"111","severity":1,"message":"141","line":5,"column":29,"nodeType":"113","messageId":"114","endLine":5,"endColumn":32},{"ruleId":"111","severity":1,"message":"142","line":6,"column":24,"nodeType":"113","messageId":"114","endLine":6,"endColumn":35},{"ruleId":"111","severity":1,"message":"143","line":11,"column":8,"nodeType":"113","messageId":"114","endLine":11,"endColumn":21},{"ruleId":"111","severity":1,"message":"144","line":13,"column":7,"nodeType":"113","messageId":"114","endLine":13,"endColumn":19},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'InvoicePrint' is defined but never used.","'useState' is defined but never used.","'useSelector' is defined but never used.","'FormControl' is defined but never used.","'Button' is defined but never used.","no-native-reassign",["145"],"no-negated-in-lhs",["146"],["145"],["146"],"'dispatch' is assigned a value but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'invoice' is assigned a value but never used.","'INVOICE_MODAL_SHOW' is defined but never used.","'INVOICE_DELETE_FAIL' is defined but never used.","'message' is assigned a value but never used.","'CompanyDetailsTable' is defined but never used.","'useEffect' is defined but never used.","'Loader' is defined but never used.","'createClient' is defined but never used.","'current' is assigned a value but never used.","'NavLink' is defined but never used.","'Yup' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'listClients' is defined but never used.","'FormikControl' is defined but never used.","'reqdFieldMsg' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]