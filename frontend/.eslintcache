[{"D:\\React\\Accounting\\frontend\\src\\invoices\\SingleInvoice.js":"1","D:\\React\\Accounting\\frontend\\src\\components\\Header.js":"2","D:\\React\\Accounting\\frontend\\src\\invoices\\NewInvoice.js":"3","D:\\React\\Accounting\\frontend\\src\\screens\\HomeScreen.js":"4","D:\\React\\Accounting\\frontend\\src\\invoices\\InvoiceItem.js":"5","D:\\React\\Accounting\\frontend\\src\\components\\Footer.js":"6","D:\\React\\Accounting\\frontend\\src\\reportWebVitals.js":"7","D:\\React\\Accounting\\frontend\\src\\App.js":"8","D:\\React\\Accounting\\frontend\\src\\store.js":"9","D:\\React\\Accounting\\frontend\\src\\index.js":"10","D:\\React\\Accounting\\frontend\\src\\reducers\\invoiceReducers.js":"11","D:\\React\\Accounting\\frontend\\src\\constants\\invoiceConstants.js":"12","D:\\React\\Accounting\\frontend\\src\\actions\\invoiceActions.js":"13","D:\\React\\Accounting\\frontend\\src\\shared\\form\\Form.js":"14","D:\\React\\Accounting\\frontend\\src\\constants\\clientConstants.js":"15","D:\\React\\Accounting\\frontend\\src\\actions\\clientActions.js":"16","D:\\React\\Accounting\\frontend\\src\\reducers\\clientReducer.js":"17"},{"size":2575,"mtime":1610397821203,"results":"18","hashOfConfig":"19"},{"size":1201,"mtime":1609173844113,"results":"20","hashOfConfig":"19"},{"size":9696,"mtime":1610470776890,"results":"21","hashOfConfig":"19"},{"size":1705,"mtime":1610433341493,"results":"22","hashOfConfig":"19"},{"size":346,"mtime":1610004097084,"results":"23","hashOfConfig":"19"},{"size":427,"mtime":1608824761201,"results":"24","hashOfConfig":"19"},{"size":362,"mtime":1606116057459,"results":"25","hashOfConfig":"19"},{"size":907,"mtime":1610005767509,"results":"26","hashOfConfig":"19"},{"size":788,"mtime":1610467791055,"results":"27","hashOfConfig":"19"},{"size":587,"mtime":1610054565594,"results":"28","hashOfConfig":"19"},{"size":2105,"mtime":1610468425910,"results":"29","hashOfConfig":"19"},{"size":736,"mtime":1610464980549,"results":"30","hashOfConfig":"19"},{"size":2623,"mtime":1610471446017,"results":"31","hashOfConfig":"19"},{"size":2029,"mtime":1610454382853,"results":"32","hashOfConfig":"19"},{"size":352,"mtime":1610438787395,"results":"33","hashOfConfig":"19"},{"size":2003,"mtime":1610452304756,"results":"34","hashOfConfig":"19"},{"size":1438,"mtime":1610453277256,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},"1thy00v",{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"67","messages":"68","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\React\\Accounting\\frontend\\src\\invoices\\SingleInvoice.js",["75","76","77"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport { withRouter } from 'react-router-dom'\r\n// import { invoices } from '../invoices'\r\nimport { Table, InputGroup, FormControl } from 'react-bootstrap'\r\nimport EditModal from '../shared/UIElements/EditModal'\r\nimport { FormEdit } from '../shared/form/Form'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport { listInvoiceDetails } from '../actions/invoiceActions'\r\n\r\nconst SingleInvoice = ({ match }) => {\r\n  const [showModal, setShowModal] = useState(false)\r\n  const dispatch = useDispatch()\r\n  const invoiceDetails = useSelector((state) => state.invoiceDetails)\r\n  const { loading, error, invoice } = invoiceDetails\r\n\r\n  useEffect(() => {\r\n    dispatch(listInvoiceDetails(match.params.iid))\r\n  }, [dispatch, match.params.iid])\r\n\r\n  console.log(invoice)\r\n\r\n  let content = null\r\n  if (invoice) {\r\n    const { number, client, lines, total } = invoice\r\n    const handleShow = () => {\r\n      setShowModal(true)\r\n    }\r\n    const handleClose = () => {\r\n      setShowModal(false)\r\n    }\r\n    content = loading ? (\r\n      <Loader />\r\n    ) : error ? (\r\n      <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n      <>\r\n        <EditModal\r\n          showModal={showModal}\r\n          closeModal={handleClose}\r\n          title='Редактировать Запись'\r\n          body={<FormEdit />}\r\n        />\r\n        <h2 className='text-center'>Счет № {number}</h2>\r\n        <h5>Клиент: {client}</h5>\r\n        <Table bordered hover size='sm'>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ width: '75%' }}>Оказанная услуга</th>\r\n              <th style={{ width: '10%' }}>Количество</th>\r\n              <th style={{ width: '15%' }}>Цена </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {lines.map((line) => (\r\n              <tr key={Math.random()} onClick={handleShow}>\r\n                <td>{line.jobDescription}</td>\r\n                <td>{line.quantity}</td>\r\n                <td>{line.cost}</td>\r\n              </tr>\r\n            ))}\r\n            <tr>\r\n              <td>\r\n                <strong>Всего: </strong>\r\n              </td>\r\n              <td></td>\r\n              <td>\r\n                <strong>{total} руб.</strong>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n      </>\r\n    )\r\n  }\r\n  return content\r\n}\r\n\r\nexport default withRouter(SingleInvoice)\r\n",["78","79"],"D:\\React\\Accounting\\frontend\\src\\components\\Header.js",["80"],"import React from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container } from 'react-bootstrap'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <Navbar bg='primary' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Nav.Link>\r\n              <Navbar.Brand>Все Счета</Navbar.Brand>\r\n            </Nav.Link>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/new-invoice'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-plus-circle'></i> Новый счет\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n\r\n              <LinkContainer to='/login'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-user'></i>Sign In\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n",["81","82"],"D:\\React\\Accounting\\frontend\\src\\invoices\\NewInvoice.js",["83","84","85","86","87"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\nimport * as yup from 'yup'\r\nimport { Formik, ErrorMessage, FieldArray, Field } from 'formik'\r\nimport { Form, Col, Button } from 'react-bootstrap'\r\nimport SuccessModal from '../shared/UIElements/SuccessModal'\r\nimport TextError from '../shared/form/TextError'\r\nimport EditModal from '../shared/UIElements/EditModal'\r\nimport { FormNewClient } from '../shared/form/Form'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\nimport {\r\n  createClient,\r\n  listClients,\r\n  newClientModalHide,\r\n  newClientModalShow,\r\n} from '../actions/clientActions'\r\nimport { createInvoice } from '../actions/invoiceActions'\r\n\r\nconst reqdFieldMsg = 'Обязательное поле'\r\n\r\nconst schema = yup.object({\r\n  client: yup.string().required(reqdFieldMsg),\r\n  vessel: yup.string().required(reqdFieldMsg),\r\n  voyage: yup.string().required(reqdFieldMsg),\r\n  bl: yup.string().required(reqdFieldMsg),\r\n  container: yup.string().required(reqdFieldMsg),\r\n})\r\n\r\n// const clients = ['TSRY', 'Фортуна', 'ИП Скакун']\r\n\r\nconst NewInvoice = () => {\r\n  const [validData, setValidData] = useState({})\r\n  const [showModal, setShowModal] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n  const clientList = useSelector((state) => state.clientList)\r\n  const { loading, error, clients } = clientList\r\n\r\n  const clientCreate = useSelector((state) => state.clientCreate)\r\n  const { isNewClientModalShow, err } = clientCreate\r\n\r\n  const invoiceList = useSelector((state) => state.invoiceList)\r\n  const { nextInvoiceNumber } = invoiceList\r\n\r\n  useEffect(() => {\r\n    dispatch(listClients())\r\n  }, [dispatch])\r\n\r\n  const onSubmit = (values) => {\r\n    values.lines.map((line) => (line.subTotal = line.quantity * line.cost))\r\n\r\n    const t = values.lines.map((line) => line.subTotal)\r\n    const linesNumber = values.lines.length\r\n    const total = t.reduce((a, b) => a + b)\r\n\r\n    values = { ...values, total, linesNumber, number: nextInvoiceNumber }\r\n\r\n    console.log(values)\r\n    setValidData(values)\r\n    dispatch(createInvoice(values))\r\n    setShowModal(true) //////////////////////////////////////////////\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        validateOnChange={false}\r\n        initialValues={{\r\n          client: '',\r\n          vessel: '',\r\n          voyage: '',\r\n          bl: '',\r\n          container: '',\r\n          lines: [\r\n            {\r\n              jobDescription: '',\r\n              quantity: '',\r\n              cost: '',\r\n            },\r\n          ],\r\n          linesNumber: [''],\r\n        }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          getFieldProps,\r\n          values,\r\n          touched,\r\n          errors,\r\n        }) => {\r\n          return (\r\n            <>\r\n              {err && <Message variant='danger'>{err}</Message>}\r\n              <EditModal\r\n                showModal={isNewClientModalShow}\r\n                closeModal={() => dispatch(newClientModalHide())}\r\n                title='Введите название компании'\r\n                body={<FormNewClient />}\r\n              />\r\n              <Form noValidate onSubmit={handleSubmit}>\r\n                <Form.Row className='mb-2'>\r\n                  <Form.Group as={Col} md='8'>\r\n                    <Form.Label>Клиент - выбор из списка</Form.Label>\r\n                    <Form.Control\r\n                      as='select'\r\n                      type='text'\r\n                      name='client'\r\n                      {...getFieldProps('client')}\r\n                      isInvalid={errors.client && touched.client}\r\n                    >\r\n                      <option></option>\r\n                      {clients.map((client) => (\r\n                        <option key={client}>{client}</option>\r\n                      ))}\r\n                    </Form.Control>\r\n                    <ErrorMessage name='client' component={TextError} />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Button\r\n                      className='btn-secondary'\r\n                      style={{ marginTop: '31px' }}\r\n                      onClick={() => dispatch(newClientModalShow())}\r\n                    >\r\n                      или - Новый клиент\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row className='mb-2'>\r\n                  <Form.Group as={Col} md='8'>\r\n                    <Form.Label>Судно</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      name='vessel'\r\n                      // placeholder='Название судна'\r\n                      {...getFieldProps('vessel')}\r\n                      isInvalid={errors.vessel && touched.vessel}\r\n                    />\r\n                    <ErrorMessage name='vessel' component={TextError} />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md='4'>\r\n                    <Form.Label>Номер рейса</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      name='voyage'\r\n                      // placeholder='Номер рейса'\r\n                      {...getFieldProps('voyage')}\r\n                      isInvalid={errors.voyage && touched.voyage}\r\n                    />\r\n                    <ErrorMessage name='voyage' component={TextError} />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                  <Form.Group as={Col} md='4'>\r\n                    <Form.Label>Коносамент</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      name='bl'\r\n                      // placeholder='Номер коносамента'\r\n                      {...getFieldProps('bl')}\r\n                      isInvalid={errors.bl && touched.bl}\r\n                    />\r\n                    <ErrorMessage name='bl' component={TextError} />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md='8'>\r\n                    <Form.Label>Номера контейнеров</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      name='container'\r\n                      // placeholder='Номера контейнеров'\r\n                      {...getFieldProps('container')}\r\n                      isInvalid={errors.container && touched.container}\r\n                    />\r\n                    <ErrorMessage name='container' component={TextError} />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <h5 className='text-center mt-5'>Позиции Счета</h5>\r\n\r\n                <FieldArray\r\n                  name='lines'\r\n                  render={(arrayHelpers) => (\r\n                    <>\r\n                      {values.lines.map((friend, index) => (\r\n                        <Form.Row key={index}>\r\n                          {/** both these conventions do the same */}\r\n                          <Form.Group as={Col} xs={9}>\r\n                            <Field\r\n                              as={Form.Control}\r\n                              name={`lines[${index}].jobDescription`}\r\n                              placeholder='Описание услуги'\r\n                            />\r\n                          </Form.Group>\r\n                          <Form.Group as={Col}>\r\n                            <Field\r\n                              as={Form.Control}\r\n                              name={`lines.${index}.quantity`}\r\n                              placeholder='Количество'\r\n                            />\r\n                          </Form.Group>\r\n                          <Form.Group as={Col}>\r\n                            <Field\r\n                              as={Form.Control}\r\n                              name={`lines.${index}.cost`}\r\n                              placeholder='Цена'\r\n                            />\r\n                          </Form.Group>\r\n                          <Form.Group>\r\n                            <Button\r\n                              className='btn'\r\n                              type='button'\r\n                              onClick={() => {\r\n                                arrayHelpers.remove(index)\r\n                              }}\r\n                            >\r\n                              <i className='fas fa-minus-circle'></i>\r\n                            </Button>\r\n                          </Form.Group>\r\n                        </Form.Row>\r\n                      ))}\r\n                      <Form.Group>\r\n                        <Button\r\n                          className='btn btn-success'\r\n                          type='button'\r\n                          onClick={() => {\r\n                            arrayHelpers.push('')\r\n                          }}\r\n                        >\r\n                          <i className='fas fa-plus-circle'></i>\r\n                        </Button>\r\n                      </Form.Group>\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Button type='submit'>Отправить</Button>\r\n              </Form>\r\n            </>\r\n          )\r\n        }}\r\n      </Formik>\r\n      <SuccessModal\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        data={validData}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewInvoice\r\n","D:\\React\\Accounting\\frontend\\src\\screens\\HomeScreen.js",[],"D:\\React\\Accounting\\frontend\\src\\invoices\\InvoiceItem.js",[],"D:\\React\\Accounting\\frontend\\src\\components\\Footer.js",[],"D:\\React\\Accounting\\frontend\\src\\reportWebVitals.js",[],"D:\\React\\Accounting\\frontend\\src\\App.js",["88","89"],"D:\\React\\Accounting\\frontend\\src\\store.js",[],"D:\\React\\Accounting\\frontend\\src\\index.js",[],"D:\\React\\Accounting\\frontend\\src\\reducers\\invoiceReducers.js",[],"D:\\React\\Accounting\\frontend\\src\\constants\\invoiceConstants.js",[],"D:\\React\\Accounting\\frontend\\src\\actions\\invoiceActions.js",["90"],"D:\\React\\Accounting\\frontend\\src\\shared\\form\\Form.js",["91","92","93"],"D:\\React\\Accounting\\frontend\\src\\constants\\clientConstants.js",[],"D:\\React\\Accounting\\frontend\\src\\actions\\clientActions.js",[],"D:\\React\\Accounting\\frontend\\src\\reducers\\clientReducer.js",[],{"ruleId":"94","severity":1,"message":"95","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":13},{"ruleId":"94","severity":1,"message":"98","line":6,"column":17,"nodeType":"96","messageId":"97","endLine":6,"endColumn":27},{"ruleId":"94","severity":1,"message":"99","line":6,"column":29,"nodeType":"96","messageId":"97","endLine":6,"endColumn":40},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","replacedBy":"103"},{"ruleId":"94","severity":1,"message":"104","line":4,"column":10,"nodeType":"96","messageId":"97","endLine":4,"endColumn":17},{"ruleId":"100","replacedBy":"105"},{"ruleId":"102","replacedBy":"106"},{"ruleId":"94","severity":1,"message":"95","line":3,"column":8,"nodeType":"96","messageId":"97","endLine":3,"endColumn":13},{"ruleId":"94","severity":1,"message":"107","line":12,"column":8,"nodeType":"96","messageId":"97","endLine":12,"endColumn":14},{"ruleId":"94","severity":1,"message":"108","line":15,"column":3,"nodeType":"96","messageId":"97","endLine":15,"endColumn":15},{"ruleId":"94","severity":1,"message":"109","line":40,"column":11,"nodeType":"96","messageId":"97","endLine":40,"endColumn":18},{"ruleId":"94","severity":1,"message":"110","line":40,"column":20,"nodeType":"96","messageId":"97","endLine":40,"endColumn":25},{"ruleId":"94","severity":1,"message":"111","line":11,"column":3,"nodeType":"96","messageId":"97","endLine":11,"endColumn":11},{"ruleId":"94","severity":1,"message":"112","line":12,"column":3,"nodeType":"96","messageId":"97","endLine":12,"endColumn":9},{"ruleId":"94","severity":1,"message":"113","line":13,"column":3,"nodeType":"96","messageId":"97","endLine":13,"endColumn":21},{"ruleId":"94","severity":1,"message":"114","line":1,"column":17,"nodeType":"96","messageId":"97","endLine":1,"endColumn":25},{"ruleId":"94","severity":1,"message":"115","line":2,"column":23,"nodeType":"96","messageId":"97","endLine":2,"endColumn":34},{"ruleId":"94","severity":1,"message":"116","line":5,"column":24,"nodeType":"96","messageId":"97","endLine":5,"endColumn":35},"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'InputGroup' is defined but never used.","'FormControl' is defined but never used.","no-native-reassign",["117"],"no-negated-in-lhs",["118"],"'NavLink' is defined but never used.",["117"],["118"],"'Loader' is defined but never used.","'createClient' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'Redirect' is defined but never used.","'Switch' is defined but never used.","'INVOICE_MODAL_SHOW' is defined but never used.","'useState' is defined but never used.","'useSelector' is defined but never used.","'listClients' is defined but never used.","no-global-assign","no-unsafe-negation"]