[{"C:\\React\\Accounting\\frontend\\src\\invoices\\InvoicePrint.js":"1","C:\\React\\Accounting\\frontend\\src\\shared\\form\\Form.js":"2","C:\\React\\Accounting\\frontend\\src\\index.js":"3","C:\\React\\Accounting\\frontend\\src\\components\\Header.js":"4","C:\\React\\Accounting\\frontend\\src\\screens\\HomeScreen.js":"5","C:\\React\\Accounting\\frontend\\src\\reducers\\invoiceReducers.js":"6","C:\\React\\Accounting\\frontend\\src\\invoices\\CopyInvoice.js":"7","C:\\React\\Accounting\\frontend\\src\\shared\\tables\\CompanyDetailsTable.js":"8","C:\\React\\Accounting\\frontend\\src\\shared\\form\\FormikControl.js":"9","C:\\React\\Accounting\\frontend\\src\\reducers\\clientReducer.js":"10","C:\\React\\Accounting\\frontend\\src\\constants\\invoiceConstants.js":"11","C:\\React\\Accounting\\frontend\\src\\actions\\invoiceActions.js":"12","C:\\React\\Accounting\\frontend\\src\\invoices\\InvoiceItem.js":"13","C:\\React\\Accounting\\frontend\\src\\invoices\\SingleInvoice.js":"14","C:\\React\\Accounting\\frontend\\src\\components\\Footer.js":"15","C:\\React\\Accounting\\frontend\\src\\shared\\form\\Textarea.js":"16","C:\\React\\Accounting\\frontend\\src\\shared\\UIElements\\EditModal.js":"17","C:\\React\\Accounting\\frontend\\src\\App.js":"18","C:\\React\\Accounting\\frontend\\src\\screens\\PrintScreen.js":"19","C:\\React\\Accounting\\frontend\\src\\shared\\form\\Input.js":"20","C:\\React\\Accounting\\frontend\\src\\shared\\UIElements\\SuccessModal.js":"21","C:\\React\\Accounting\\frontend\\src\\actions\\clientActions.js":"22","C:\\React\\Accounting\\frontend\\src\\invoices\\NewInvoice.js":"23","C:\\React\\Accounting\\frontend\\src\\shared\\form\\TextError.js":"24","C:\\React\\Accounting\\frontend\\src\\invoices\\EditInvoice.js":"25","C:\\React\\Accounting\\frontend\\src\\components\\Loader.js":"26","C:\\React\\Accounting\\frontend\\src\\invoices\\AvrPrint.js":"27"},{"size":3186,"mtime":1610913969604,"results":"28","hashOfConfig":"29"},{"size":2340,"mtime":1610841852550,"results":"30","hashOfConfig":"29"},{"size":587,"mtime":1610054565594,"results":"31","hashOfConfig":"29"},{"size":1201,"mtime":1609173844113,"results":"32","hashOfConfig":"29"},{"size":2934,"mtime":1610898481452,"results":"33","hashOfConfig":"29"},{"size":3029,"mtime":1610897474848,"results":"34","hashOfConfig":"29"},{"size":10245,"mtime":1610635204418,"results":"35","hashOfConfig":"29"},{"size":2026,"mtime":1610815706541,"results":"36","hashOfConfig":"29"},{"size":335,"mtime":1610523275280,"results":"37","hashOfConfig":"29"},{"size":1438,"mtime":1610896102805,"results":"38","hashOfConfig":"29"},{"size":1176,"mtime":1610896204742,"results":"39","hashOfConfig":"29"},{"size":4769,"mtime":1610899241221,"results":"40","hashOfConfig":"29"},{"size":670,"mtime":1610910386603,"results":"41","hashOfConfig":"29"},{"size":4997,"mtime":1610897823576,"results":"42","hashOfConfig":"29"},{"size":427,"mtime":1608824761201,"results":"43","hashOfConfig":"29"},{"size":400,"mtime":1610522957167,"results":"44","hashOfConfig":"29"},{"size":720,"mtime":1609315099352,"results":"45","hashOfConfig":"29"},{"size":1577,"mtime":1610909980304,"results":"46","hashOfConfig":"29"},{"size":1317,"mtime":1610914371501,"results":"47","hashOfConfig":"29"},{"size":394,"mtime":1610522957137,"results":"48","hashOfConfig":"29"},{"size":679,"mtime":1609158754187,"results":"49","hashOfConfig":"29"},{"size":2003,"mtime":1610452304756,"results":"50","hashOfConfig":"29"},{"size":10481,"mtime":1610633163021,"results":"51","hashOfConfig":"29"},{"size":174,"mtime":1609181880473,"results":"52","hashOfConfig":"29"},{"size":8690,"mtime":1610635312951,"results":"53","hashOfConfig":"29"},{"size":405,"mtime":1610386299325,"results":"54","hashOfConfig":"29"},{"size":222,"mtime":1610912530616,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1tn6h3s",{"filePath":"58","messages":"59","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"86"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"92"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"102","messages":"103","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"64"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\React\\Accounting\\frontend\\src\\invoices\\InvoicePrint.js",[],"C:\\React\\Accounting\\frontend\\src\\shared\\form\\Form.js",["122","123","124","125","126","127","128","129"],"import React, { useState } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport * as Yup from 'yup'\r\nimport { ErrorMessage, Formik } from 'formik'\r\nimport { Form, Col, Button, Row } from 'react-bootstrap'\r\nimport { createClient, listClients } from '../../actions/clientActions'\r\nimport TextError from './TextError'\r\n\r\n// import { Formik, Form } from 'formik'\r\n\r\nimport FormikControl from './FormikControl'\r\n\r\nconst reqdFieldMsg = 'Обязательное поле'\r\n\r\nexport const FormNewClient = (props) => {\r\n  const dispatch = useDispatch()\r\n  const initialValues = {\r\n    newClient: '',\r\n  }\r\n  function onSubmit(values) {\r\n    dispatch(createClient({ name: values.newClient, address: values.address }))\r\n\r\n    console.log(values.newClient)\r\n  }\r\n  return (\r\n    <Formik {...{ initialValues, onSubmit }}>\r\n      {({ getFieldProps, handleSubmit, errors, touched }) => (\r\n        <form\r\n          className='baseForm'\r\n          onSubmit={handleSubmit}\r\n          // validationSchema={schema}\r\n        >\r\n          <Form.Control\r\n            type='text'\r\n            placeholder='Введите название клиента'\r\n            id='newClient'\r\n            {...getFieldProps('newClient')}\r\n            isInvalid={errors.newClient && touched.newClient}\r\n          />\r\n          <ErrorMessage name='newClient' component={TextError} />\r\n\r\n          <Form.Control\r\n            className='mt-2'\r\n            type='text'\r\n            placeholder='Введите адрес клиента'\r\n            id='newClient'\r\n            {...getFieldProps('address')}\r\n            isInvalid={errors.newClient && touched.newClient}\r\n          />\r\n          <ErrorMessage name='newClient' component={TextError} />\r\n\r\n          <Button className='mt-2' type='submit' disabled={errors.newClient}>\r\n            Сохранить\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </Formik>\r\n  )\r\n}\r\n\r\n// export const FormNewClient = () => {\r\n//   return (\r\n//     <Form>\r\n//       <Form.Row>\r\n//         <Form.Control as={Col} placeholder='Новый Клиент' />\r\n//         <Button\r\n//           className='btn btn-success ml-2'\r\n//           type='submit'\r\n//           variant='primary'\r\n//         >\r\n//           Сохранить\r\n//         </Button>\r\n//       </Form.Row>\r\n//     </Form>\r\n//   )\r\n// }\r\n",["130","131"],"C:\\React\\Accounting\\frontend\\src\\index.js",[],["132","133"],"C:\\React\\Accounting\\frontend\\src\\components\\Header.js",["134"],"import React from 'react'\r\nimport { LinkContainer } from 'react-router-bootstrap'\r\nimport { Navbar, Nav, Container } from 'react-bootstrap'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nconst Header = () => {\r\n  return (\r\n    <header>\r\n      <Navbar bg='primary' variant='dark' expand='lg' collapseOnSelect>\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Nav.Link>\r\n              <Navbar.Brand>Все Счета</Navbar.Brand>\r\n            </Nav.Link>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Nav className='ml-auto'>\r\n              <LinkContainer to='/new-invoice'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-plus-circle'></i> Новый счет\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n\r\n              <LinkContainer to='/login'>\r\n                <Nav.Link>\r\n                  <i className='fas fa-user'></i>Sign In\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  )\r\n}\r\n\r\nexport default Header\r\n",["135","136"],"C:\\React\\Accounting\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\React\\Accounting\\frontend\\src\\reducers\\invoiceReducers.js",[],"C:\\React\\Accounting\\frontend\\src\\invoices\\CopyInvoice.js",["137","138","139","140"],"C:\\React\\Accounting\\frontend\\src\\shared\\tables\\CompanyDetailsTable.js",[],"C:\\React\\Accounting\\frontend\\src\\shared\\form\\FormikControl.js",[],"C:\\React\\Accounting\\frontend\\src\\reducers\\clientReducer.js",[],"C:\\React\\Accounting\\frontend\\src\\constants\\invoiceConstants.js",[],"C:\\React\\Accounting\\frontend\\src\\actions\\invoiceActions.js",["141","142","143"],"import axios from 'axios'\r\nimport {\r\n  INVOICE_LIST_REQUEST,\r\n  INVOICE_LIST_FAIL,\r\n  INVOICE_LIST_SUCCESS,\r\n  SET_NEXT_INVOICE_NUMBER,\r\n  INVOICE_DETAILS_REQUEST,\r\n  INVOICE_DETAILS_SUCCESS,\r\n  INVOICE_DETAILS_FAIL,\r\n  INVOICE_CREATE_REQUEST,\r\n  INVOICE_CREATE_SUCCESS,\r\n  INVOICE_CREATE_FAIL,\r\n  INVOICE_MODAL_SHOW,\r\n  INVOICE_MODAL_HIDE,\r\n  SET_CURRENT_INVOICE,\r\n  INVOICE_UPDATE_REQUEST,\r\n  INVOICE_UPDATE_SUCCESS,\r\n  INVOICE_UPDATE_FAIL,\r\n  INVOICE_DELETE_REQUEST,\r\n  INVOICE_DELETE_SUCCESS,\r\n  INVOICE_DELETE_FAIL,\r\n} from '../constants/invoiceConstants'\r\n\r\nexport const listInvoices = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: INVOICE_LIST_REQUEST })\r\n\r\n    const { data } = await axios('/api/invoices')\r\n\r\n    dispatch({ type: INVOICE_LIST_SUCCESS, payload: data })\r\n\r\n    const lastNumber = await data.reduce((prev, current) =>\r\n      prev.number > current.number ? prev : current\r\n    )\r\n    const nextNumber = lastNumber.number + 1\r\n    console.log(nextNumber)\r\n    dispatch({ type: SET_NEXT_INVOICE_NUMBER, payload: nextNumber })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: INVOICE_LIST_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const listInvoiceDetails = (id) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: INVOICE_DETAILS_REQUEST })\r\n\r\n    const { data } = await axios(`/api/invoices/${id}`)\r\n\r\n    dispatch({ type: INVOICE_DETAILS_SUCCESS, payload: data })\r\n  } catch (error) {\r\n    dispatch({\r\n      type: INVOICE_DETAILS_FAIL,\r\n      payload:\r\n        error.response && error.response.data.message\r\n          ? error.response.data.message\r\n          : error.message,\r\n    })\r\n  }\r\n}\r\n\r\nexport const createInvoice = (invoice) => async (dispatch, getState) => {\r\n  console.log('NEW INVOICE: ', invoice)\r\n  try {\r\n    dispatch({\r\n      type: INVOICE_CREATE_REQUEST,\r\n    })\r\n\r\n    // const {\r\n    //   userLogin: { userInfo },\r\n    // } = getState()\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.post(\r\n      '/api/invoices',\r\n      JSON.stringify(invoice),\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: INVOICE_CREATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n    dispatch(listInvoices())\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    // if (message === 'Not authorized, token failed') {\r\n    //   dispatch(logout())\r\n\r\n    dispatch({\r\n      type: INVOICE_CREATE_FAIL,\r\n      payload: message,\r\n    })\r\n    dispatch({ type: INVOICE_MODAL_HIDE })\r\n  }\r\n}\r\n\r\nexport const setCurrentInvoice = (invoice) => (dispatch, getState) => {\r\n  console.log('CURRENT INVOICE: ', invoice)\r\n\r\n  dispatch({ type: SET_CURRENT_INVOICE, payload: invoice })\r\n}\r\n\r\nexport const updateInvoice = (invoice) => async (dispatch, getState) => {\r\n  console.log('UPDATE INVOICE', invoice)\r\n  try {\r\n    dispatch({\r\n      type: INVOICE_UPDATE_REQUEST,\r\n    })\r\n\r\n    const config = {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        // Authorization: `Bearer ${userInfo.token}`,\r\n      },\r\n    }\r\n\r\n    const { data } = await axios.put(\r\n      `/api/invoices/${invoice._id}`,\r\n      invoice,\r\n      config\r\n    )\r\n\r\n    dispatch({\r\n      type: INVOICE_UPDATE_SUCCESS,\r\n      payload: data,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    // if (message === 'Not authorized, token failed') {\r\n    //   dispatch(logout())\r\n    // }\r\n    dispatch({\r\n      type: INVOICE_UPDATE_FAIL,\r\n      payload: message,\r\n    })\r\n  }\r\n}\r\nexport const deleteInvoice = (id) => async (dispatch, getState) => {\r\n  console.log(id)\r\n  try {\r\n    dispatch({\r\n      type: INVOICE_DELETE_REQUEST,\r\n      payload: id,\r\n    })\r\n\r\n    // const {\r\n    //   userLogin: { userInfo },\r\n    // } = getState()\r\n\r\n    // const config = {\r\n    //   headers: {\r\n    //     Authorization: `Bearer ${userInfo.token}`,\r\n    //   },\r\n    // }\r\n\r\n    await axios.delete(`/api/invoices/${id}`) //, config\r\n\r\n    dispatch({\r\n      type: INVOICE_DELETE_SUCCESS,\r\n      payload: id,\r\n    })\r\n  } catch (error) {\r\n    const message =\r\n      error.response && error.response.data.message\r\n        ? error.response.data.message\r\n        : error.message\r\n    // if (message === 'Not authorized, token failed') {\r\n    //   dispatch(logout())\r\n    // }\r\n    // dispatch({\r\n    //   type: INVOICE_DELETE_FAIL,\r\n    //   payload: message,\r\n    // })\r\n  }\r\n}\r\n",["144","145"],"C:\\React\\Accounting\\frontend\\src\\invoices\\InvoiceItem.js",[],"C:\\React\\Accounting\\frontend\\src\\invoices\\SingleInvoice.js",["146"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { useHistory } from 'react-router-dom'\r\nimport { Table, Button } from 'react-bootstrap'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\nimport {\r\n  listInvoiceDetails,\r\n  setCurrentInvoice,\r\n} from '../actions/invoiceActions'\r\n\r\nconst SingleInvoice = ({ match }) => {\r\n  const dispatch = useDispatch()\r\n  const invoiceDetails = useSelector((state) => state.invoiceDetails)\r\n  const { loading, error, invoice } = invoiceDetails\r\n\r\n  const history = useHistory()\r\n\r\n  useEffect(() => {\r\n    dispatch(listInvoiceDetails(match.params.iid))\r\n  }, [dispatch, match.params.iid])\r\n\r\n  console.log(invoice)\r\n\r\n  let content = null\r\n  if (invoice) {\r\n    const {\r\n      number,\r\n      client,\r\n      vessel,\r\n      voyage,\r\n      bl,\r\n      container,\r\n      lines,\r\n      total,\r\n    } = invoice\r\n\r\n    const editHandler = (invoice) => {\r\n      console.log('IIIIII', invoice)\r\n      dispatch(setCurrentInvoice(invoice))\r\n      history.push('/invoices/edit')\r\n    }\r\n\r\n    const copyHandler = (invoice) => {\r\n      console.log('IIIIII', invoice)\r\n      dispatch(setCurrentInvoice(invoice))\r\n      history.push('/invoices/copy')\r\n    }\r\n\r\n    const printHandler = (invoice) => {\r\n      dispatch(setCurrentInvoice(invoice))\r\n      history.push('/invoices/print')\r\n    }\r\n\r\n    content = loading ? (\r\n      <Loader />\r\n    ) : error ? (\r\n      <Message variant='danger'>{error}</Message>\r\n    ) : (\r\n      <>\r\n        <h2 className='text-center'>Счет № {number}</h2>\r\n        <h4>Клиент: {client}</h4>\r\n        <Table bordered hover size='sm'>\r\n          <tbody>\r\n            <tr>\r\n              <td>Судно: </td>\r\n              <td>{vessel}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Номер рейса: </td>\r\n              <td>{voyage}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Номер коносамента:</td>\r\n              <td>{bl}</td>\r\n            </tr>\r\n            <tr>\r\n              <td>Номера контейнеров:</td>\r\n              <td>{container}</td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n        <Table bordered striped hover size='sm'>\r\n          <thead>\r\n            <tr>\r\n              <th style={{ width: '70%' }}>Оказанная услуга</th>\r\n              <th style={{ width: '10%' }}>Количество</th>\r\n              <th style={{ width: '10%' }}>Цена </th>\r\n              <th style={{ width: '10%' }}>Сумма </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {lines.map((line) => (\r\n              <tr key={Math.random()}>\r\n                <td>{line.jobDescription}</td>\r\n                <td>{line.quantity}</td>\r\n                <td>{line.cost}</td>\r\n                <td>{line.subTotal}</td>\r\n              </tr>\r\n            ))}\r\n            <tr>\r\n              <td>\r\n                <strong>Всего: </strong>\r\n              </td>\r\n              <td></td>\r\n              <td></td>\r\n              <td>\r\n                <strong>{total} руб.</strong>\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </Table>\r\n        <Button\r\n          variant='outline-primary'\r\n          onClick={() => editHandler(invoice)}\r\n          data-tip\r\n          data-for='editTip'\r\n        >\r\n          <i className='far fa-edit'></i>\r\n        </Button>\r\n        <ReactTooltip id='editTip' place='top' effect='solid'>\r\n          Редактировать счет\r\n        </ReactTooltip>\r\n        <Button\r\n          variant='outline-info'\r\n          className='ml-3'\r\n          onClick={() => copyHandler(invoice)}\r\n          data-tip\r\n          data-for='copyTip'\r\n        >\r\n          <i className='far fa-copy'></i>\r\n        </Button>\r\n        <ReactTooltip id='copyTip' place='bottom' effect='solid'>\r\n          Копировать счет\r\n        </ReactTooltip>\r\n        <Button\r\n          variant='outline-success'\r\n          className='ml-5'\r\n          onClick={() => printHandler(invoice)}\r\n          data-tip\r\n          data-for='printTip'\r\n        >\r\n          <i className='fas fa-print'></i>\r\n        </Button>\r\n        <ReactTooltip id='printTip' place='left' effect='solid'>\r\n          Сформировать счет для печати\r\n        </ReactTooltip>\r\n        <Button\r\n          variant='outline-dark'\r\n          className='ml-3'\r\n          onClick={() => printHandler(invoice)}\r\n          data-tip\r\n          data-for='printAvrTip'\r\n        >\r\n          <i className='fab fa-buysellads'></i>\r\n        </Button>\r\n        <ReactTooltip id='printAvrTip' place='right' effect='solid'>\r\n          Сформировать АВР для печати\r\n        </ReactTooltip>\r\n      </>\r\n    )\r\n  }\r\n  return content\r\n}\r\n\r\nexport default withRouter(SingleInvoice)\r\n",["147","148"],"C:\\React\\Accounting\\frontend\\src\\components\\Footer.js",[],["149","150"],"C:\\React\\Accounting\\frontend\\src\\shared\\form\\Textarea.js",[],"C:\\React\\Accounting\\frontend\\src\\shared\\UIElements\\EditModal.js",[],"C:\\React\\Accounting\\frontend\\src\\App.js",["151","152"],"C:\\React\\Accounting\\frontend\\src\\screens\\PrintScreen.js",["153","154","155","156"],"C:\\React\\Accounting\\frontend\\src\\shared\\form\\Input.js",[],"C:\\React\\Accounting\\frontend\\src\\shared\\UIElements\\SuccessModal.js",[],["157","158"],"C:\\React\\Accounting\\frontend\\src\\actions\\clientActions.js",[],"C:\\React\\Accounting\\frontend\\src\\invoices\\NewInvoice.js",["159","160","161","162","163"],"import React, { useState, useEffect } from 'react'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport * as yup from 'yup'\r\nimport { Formik, ErrorMessage, FieldArray, Field } from 'formik'\r\nimport { Form, Col, Button } from 'react-bootstrap'\r\nimport ReactTooltip from 'react-tooltip'\r\nimport SuccessModal from '../shared/UIElements/SuccessModal'\r\nimport TextError from '../shared/form/TextError'\r\nimport EditModal from '../shared/UIElements/EditModal'\r\nimport { FormNewClient } from '../shared/form/Form'\r\nimport Message from '../components/Message'\r\nimport Loader from '../components/Loader'\r\n\r\nimport {\r\n  createClient,\r\n  listClients,\r\n  newClientModalHide,\r\n  newClientModalShow,\r\n} from '../actions/clientActions'\r\nimport { createInvoice } from '../actions/invoiceActions'\r\n\r\nconst reqdFieldMsg = 'Обязательное поле'\r\n\r\nconst schema = yup.object({\r\n  client: yup.string().required(reqdFieldMsg),\r\n  vessel: yup.string().required(reqdFieldMsg),\r\n  voyage: yup.string().required(reqdFieldMsg),\r\n  bl: yup.string().required(reqdFieldMsg),\r\n  container: yup.string().required(reqdFieldMsg),\r\n})\r\n\r\nconst NewInvoice = () => {\r\n  const [validData, setValidData] = useState({})\r\n  const [showModal, setShowModal] = useState(false)\r\n\r\n  const dispatch = useDispatch()\r\n  const clientList = useSelector((state) => state.clientList)\r\n  const { loading, error, clients } = clientList\r\n\r\n  const clientCreate = useSelector((state) => state.clientCreate)\r\n  const { isNewClientModalShow, err } = clientCreate\r\n\r\n  const invoiceList = useSelector((state) => state.invoiceList)\r\n  const { nextInvoiceNumber } = invoiceList\r\n\r\n  const invoiceDetails = useSelector((state) => state.invoiceDetails)\r\n  const { current } = invoiceDetails\r\n\r\n  useEffect(() => {\r\n    dispatch(listClients())\r\n  }, [dispatch])\r\n\r\n  const onSubmit = (values) => {\r\n    values.lines.map((line) => (line.subTotal = line.quantity * line.cost))\r\n\r\n    const t = values.lines.map((line) => line.subTotal)\r\n    const linesNumber = values.lines.length\r\n    const total = t.reduce((a, b) => a + b)\r\n\r\n    values = { ...values, total, linesNumber, number: nextInvoiceNumber }\r\n\r\n    console.log(values)\r\n    setValidData(values)\r\n    dispatch(createInvoice(values))\r\n    setShowModal(true) //////////////////////////////////////////////\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Formik\r\n        validationSchema={schema}\r\n        onSubmit={onSubmit}\r\n        validateOnChange={false}\r\n        initialValues={{\r\n          client: '',\r\n          vessel: '',\r\n          voyage: '',\r\n          bl: '',\r\n          container: '',\r\n          lines: [\r\n            {\r\n              jobDescription: '',\r\n              quantity: '',\r\n              cost: '',\r\n            },\r\n          ],\r\n          linesNumber: [''],\r\n        }}\r\n      >\r\n        {({\r\n          handleSubmit,\r\n          handleChange,\r\n          handleBlur,\r\n          getFieldProps,\r\n          values,\r\n          touched,\r\n          errors,\r\n        }) => {\r\n          return (\r\n            <>\r\n              {err && <Message variant='danger'>{err}</Message>}\r\n              <EditModal\r\n                showModal={isNewClientModalShow}\r\n                closeModal={() => dispatch(newClientModalHide())}\r\n                title='Введите название компании'\r\n                body={<FormNewClient />}\r\n              />\r\n              <Form noValidate onSubmit={handleSubmit}>\r\n                <Form.Row className='mb-2'>\r\n                  <Form.Group as={Col} md='8'>\r\n                    <Form.Label>Клиент - выбор из списка</Form.Label>\r\n                    <Form.Control\r\n                      as='select'\r\n                      type='text'\r\n                      name='client'\r\n                      {...getFieldProps('client')}\r\n                      isInvalid={errors.client && touched.client}\r\n                    >\r\n                      <option></option>\r\n                      {clients.map((client) => (\r\n                        <option key={client}>{client}</option>\r\n                      ))}\r\n                    </Form.Control>\r\n                    <ErrorMessage name='client' component={TextError} />\r\n                  </Form.Group>\r\n                  <Form.Group>\r\n                    <Button\r\n                      className='btn-secondary'\r\n                      style={{ marginTop: '31px' }}\r\n                      onClick={() => dispatch(newClientModalShow())}\r\n                    >\r\n                      или - Новый клиент\r\n                    </Button>\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row className='mb-2'>\r\n                  <Form.Group as={Col} md='8'>\r\n                    <Form.Label>Судно</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      name='vessel'\r\n                      // placeholder='Название судна'\r\n                      {...getFieldProps('vessel')}\r\n                      isInvalid={errors.vessel && touched.vessel}\r\n                    />\r\n                    <ErrorMessage name='vessel' component={TextError} />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md='4'>\r\n                    <Form.Label>Номер рейса</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      name='voyage'\r\n                      // placeholder='Номер рейса'\r\n                      {...getFieldProps('voyage')}\r\n                      isInvalid={errors.voyage && touched.voyage}\r\n                    />\r\n                    <ErrorMessage name='voyage' component={TextError} />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <Form.Row>\r\n                  <Form.Group as={Col} md='4'>\r\n                    <Form.Label>Коносамент</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      name='bl'\r\n                      // placeholder='Номер коносамента'\r\n                      {...getFieldProps('bl')}\r\n                      isInvalid={errors.bl && touched.bl}\r\n                    />\r\n                    <ErrorMessage name='bl' component={TextError} />\r\n                  </Form.Group>\r\n                  <Form.Group as={Col} md='8'>\r\n                    <Form.Label>Номера контейнеров</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      name='container'\r\n                      // placeholder='Номера контейнеров'\r\n                      {...getFieldProps('container')}\r\n                      isInvalid={errors.container && touched.container}\r\n                    />\r\n                    <ErrorMessage name='container' component={TextError} />\r\n                  </Form.Group>\r\n                </Form.Row>\r\n\r\n                <h5 className='text-center mt-5'>Позиции Счета</h5>\r\n\r\n                <FieldArray\r\n                  name='lines'\r\n                  render={(arrayHelpers) => (\r\n                    <>\r\n                      {values.lines.map((line, index) => (\r\n                        <Form.Row key={index}>\r\n                          {/** both these conventions do the same */}\r\n                          <Form.Group as={Col} xs={9}>\r\n                            <Field\r\n                              as={Form.Control}\r\n                              name={`lines[${index}].jobDescription`}\r\n                              placeholder='Описание услуги'\r\n                            />\r\n                          </Form.Group>\r\n                          <Form.Group as={Col}>\r\n                            <Field\r\n                              as={Form.Control}\r\n                              name={`lines.${index}.quantity`}\r\n                              placeholder='Количество'\r\n                            />\r\n                          </Form.Group>\r\n                          <Form.Group as={Col}>\r\n                            <Field\r\n                              as={Form.Control}\r\n                              name={`lines.${index}.cost`}\r\n                              placeholder='Цена'\r\n                            />\r\n                          </Form.Group>\r\n                          <Form.Group>\r\n                            <Button\r\n                              variant='outline-primary'\r\n                              type='button'\r\n                              onClick={() => {\r\n                                arrayHelpers.remove(index)\r\n                              }}\r\n                              data-tip\r\n                              data-for='minusTip'\r\n                            >\r\n                              <i className='fas fa-minus-circle'></i>\r\n                            </Button>\r\n                            <ReactTooltip\r\n                              id='minusTip'\r\n                              place='top'\r\n                              effect='solid'\r\n                            >\r\n                              Удалить строку\r\n                            </ReactTooltip>\r\n                          </Form.Group>\r\n                        </Form.Row>\r\n                      ))}\r\n                      <Form.Group>\r\n                        <Button\r\n                          variant='outline-success'\r\n                          // className='btn btn-success'\r\n                          type='button'\r\n                          onClick={() => {\r\n                            arrayHelpers.push('')\r\n                          }}\r\n                          data-tip\r\n                          data-for='plusTip'\r\n                        >\r\n                          <i className='fas fa-plus-circle'></i>\r\n                        </Button>\r\n                        <ReactTooltip id='plusTip' place='right' effect='solid'>\r\n                          Добавить строку\r\n                        </ReactTooltip>\r\n                      </Form.Group>\r\n                    </>\r\n                  )}\r\n                />\r\n\r\n                <Button type='submit'>Отправить</Button>\r\n              </Form>\r\n            </>\r\n          )\r\n        }}\r\n      </Formik>\r\n      <SuccessModal\r\n        show={showModal}\r\n        onHide={() => setShowModal(false)}\r\n        data={validData}\r\n      />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default NewInvoice\r\n","C:\\React\\Accounting\\frontend\\src\\shared\\form\\TextError.js",[],"C:\\React\\Accounting\\frontend\\src\\invoices\\EditInvoice.js",["164","165","166","167","168"],"C:\\React\\Accounting\\frontend\\src\\components\\Loader.js",[],"C:\\React\\Accounting\\frontend\\src\\invoices\\AvrPrint.js",["169"],{"ruleId":"170","severity":1,"message":"171","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":25},{"ruleId":"170","severity":1,"message":"174","line":2,"column":23,"nodeType":"172","messageId":"173","endLine":2,"endColumn":34},{"ruleId":"170","severity":1,"message":"175","line":3,"column":13,"nodeType":"172","messageId":"173","endLine":3,"endColumn":16},{"ruleId":"170","severity":1,"message":"176","line":5,"column":16,"nodeType":"172","messageId":"173","endLine":5,"endColumn":19},{"ruleId":"170","severity":1,"message":"177","line":5,"column":29,"nodeType":"172","messageId":"173","endLine":5,"endColumn":32},{"ruleId":"170","severity":1,"message":"178","line":6,"column":24,"nodeType":"172","messageId":"173","endLine":6,"endColumn":35},{"ruleId":"170","severity":1,"message":"179","line":11,"column":8,"nodeType":"172","messageId":"173","endLine":11,"endColumn":21},{"ruleId":"170","severity":1,"message":"180","line":13,"column":7,"nodeType":"172","messageId":"173","endLine":13,"endColumn":19},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","replacedBy":"184"},{"ruleId":"181","replacedBy":"185"},{"ruleId":"183","replacedBy":"186"},{"ruleId":"170","severity":1,"message":"187","line":4,"column":10,"nodeType":"172","messageId":"173","endLine":4,"endColumn":17},{"ruleId":"181","replacedBy":"188"},{"ruleId":"183","replacedBy":"189"},{"ruleId":"170","severity":1,"message":"190","line":12,"column":8,"nodeType":"172","messageId":"173","endLine":12,"endColumn":14},{"ruleId":"170","severity":1,"message":"191","line":15,"column":3,"nodeType":"172","messageId":"173","endLine":15,"endColumn":15},{"ruleId":"170","severity":1,"message":"192","line":38,"column":11,"nodeType":"172","messageId":"173","endLine":38,"endColumn":18},{"ruleId":"170","severity":1,"message":"193","line":38,"column":20,"nodeType":"172","messageId":"173","endLine":38,"endColumn":25},{"ruleId":"170","severity":1,"message":"194","line":13,"column":3,"nodeType":"172","messageId":"173","endLine":13,"endColumn":21},{"ruleId":"170","severity":1,"message":"195","line":21,"column":3,"nodeType":"172","messageId":"173","endLine":21,"endColumn":22},{"ruleId":"170","severity":1,"message":"196","line":181,"column":11,"nodeType":"172","messageId":"173","endLine":181,"endColumn":18},{"ruleId":"181","replacedBy":"197"},{"ruleId":"183","replacedBy":"198"},{"ruleId":"170","severity":1,"message":"171","line":1,"column":17,"nodeType":"172","messageId":"173","endLine":1,"endColumn":25},{"ruleId":"181","replacedBy":"199"},{"ruleId":"183","replacedBy":"200"},{"ruleId":"181","replacedBy":"201"},{"ruleId":"183","replacedBy":"202"},{"ruleId":"170","severity":1,"message":"203","line":11,"column":3,"nodeType":"172","messageId":"173","endLine":11,"endColumn":11},{"ruleId":"170","severity":1,"message":"204","line":16,"column":8,"nodeType":"172","messageId":"173","endLine":16,"endColumn":20},{"ruleId":"170","severity":1,"message":"205","line":14,"column":9,"nodeType":"172","messageId":"173","endLine":14,"endColumn":17},{"ruleId":"170","severity":1,"message":"192","line":16,"column":11,"nodeType":"172","messageId":"173","endLine":16,"endColumn":18},{"ruleId":"170","severity":1,"message":"193","line":16,"column":20,"nodeType":"172","messageId":"173","endLine":16,"endColumn":25},{"ruleId":"170","severity":1,"message":"206","line":16,"column":27,"nodeType":"172","messageId":"173","endLine":16,"endColumn":34},{"ruleId":"181","replacedBy":"207"},{"ruleId":"183","replacedBy":"208"},{"ruleId":"170","severity":1,"message":"190","line":12,"column":8,"nodeType":"172","messageId":"173","endLine":12,"endColumn":14},{"ruleId":"170","severity":1,"message":"191","line":15,"column":3,"nodeType":"172","messageId":"173","endLine":15,"endColumn":15},{"ruleId":"170","severity":1,"message":"192","line":38,"column":11,"nodeType":"172","messageId":"173","endLine":38,"endColumn":18},{"ruleId":"170","severity":1,"message":"193","line":38,"column":20,"nodeType":"172","messageId":"173","endLine":38,"endColumn":25},{"ruleId":"170","severity":1,"message":"209","line":47,"column":11,"nodeType":"172","messageId":"173","endLine":47,"endColumn":18},{"ruleId":"170","severity":1,"message":"210","line":1,"column":27,"nodeType":"172","messageId":"173","endLine":1,"endColumn":36},{"ruleId":"170","severity":1,"message":"203","line":3,"column":10,"nodeType":"172","messageId":"173","endLine":3,"endColumn":18},{"ruleId":"170","severity":1,"message":"211","line":3,"column":20,"nodeType":"172","messageId":"173","endLine":3,"endColumn":30},{"ruleId":"170","severity":1,"message":"212","line":10,"column":8,"nodeType":"172","messageId":"173","endLine":10,"endColumn":15},{"ruleId":"170","severity":1,"message":"190","line":11,"column":8,"nodeType":"172","messageId":"173","endLine":11,"endColumn":14},{"ruleId":"170","severity":1,"message":"213","line":7,"column":11,"nodeType":"172","messageId":"173","endLine":7,"endColumn":15},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useSelector' is defined but never used.","'Yup' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'listClients' is defined but never used.","'FormikControl' is defined but never used.","'reqdFieldMsg' is assigned a value but never used.","no-native-reassign",["214"],"no-negated-in-lhs",["215"],["214"],["215"],"'NavLink' is defined but never used.",["214"],["215"],"'Loader' is defined but never used.","'createClient' is defined but never used.","'loading' is assigned a value but never used.","'error' is assigned a value but never used.","'INVOICE_MODAL_SHOW' is defined but never used.","'INVOICE_DELETE_FAIL' is defined but never used.","'message' is assigned a value but never used.",["214"],["215"],["214"],["215"],["214"],["215"],"'Redirect' is defined but never used.","'InvoicePrint' is defined but never used.","'dispatch' is assigned a value but never used.","'invoice' is assigned a value but never used.",["214"],["215"],"'current' is assigned a value but never used.","'useEffect' is defined but never used.","'useHistory' is defined but never used.","'Message' is defined but never used.","'text' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]